<Application x:Class="TrustWindowsWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TrustWindowsWPF"
             StartupUri="MainWindow.xaml"
             xmlns:TrustWindowsWPF="clr-namespace:TrustWindowsWPF"
             ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <Color x:Key="FilledColor" A="255" B="255" R="255" G="255"/>
        <Color x:Key="UnfilledColor" A="0" B="255" R="255" G="255"/>

        <FontFamily x:Key="LatoRegular">pack://application:,,,/Confirmed VPN;component/Resources/#Lato</FontFamily>
        <FontFamily x:Key="LatoLight">pack://application:,,,/Resources/#Lato Light</FontFamily>
        <FontFamily x:Key="RobotoRegular">pack://application:,,,/Confirmed VPN;component/Resources/#Roboto</FontFamily>
        <FontFamily x:Key="RobotoLight">pack://application:,,,/Resources/#Roboto Light</FontFamily>
        <FontFamily x:Key="RobotoMedium">pack://application:,,,/Resources/#Roboto Medium</FontFamily>


        <Style x:Key="BusyAnimationStyle" TargetType="Control">
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Control">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Animation0" BeginTime="00:00:00.0" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse0" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse0" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse0" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <Storyboard x:Key="Animation1" BeginTime="00:00:00.2" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <Storyboard x:Key="Animation2" BeginTime="00:00:00.4" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <Storyboard x:Key="Animation3" BeginTime="00:00:00.6" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <Storyboard x:Key="Animation4" BeginTime="00:00:00.8" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <Storyboard x:Key="Animation5" BeginTime="00:00:01.0" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse5" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse5" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <Storyboard x:Key="Animation6" BeginTime="00:00:01.2" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse6" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse6" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse6" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <Storyboard x:Key="Animation7" BeginTime="00:00:01.4" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse7" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                    <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                </ColorAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse7" Storyboard.TargetProperty="Width" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse7" Storyboard.TargetProperty="Height" >
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame  KeyTime="00:00:00.0" Value="15" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.0" Value="12" />
                                        <SplineDoubleKeyFrame  KeyTime="00:00:01.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsVisible" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Animation0}" x:Name="Storyboard0" />
                                    <BeginStoryboard Storyboard="{StaticResource Animation1}" x:Name="Storyboard1"/>
                                    <BeginStoryboard Storyboard="{StaticResource Animation2}" x:Name="Storyboard2"/>
                                    <BeginStoryboard Storyboard="{StaticResource Animation3}" x:Name="Storyboard3"/>
                                    <BeginStoryboard Storyboard="{StaticResource Animation4}" x:Name="Storyboard4"/>
                                    <BeginStoryboard Storyboard="{StaticResource Animation5}" x:Name="Storyboard5"/>
                                    <BeginStoryboard Storyboard="{StaticResource Animation6}" x:Name="Storyboard6"/>
                                    <BeginStoryboard Storyboard="{StaticResource Animation7}" x:Name="Storyboard7"/>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="Storyboard0"/>
                                    <StopStoryboard BeginStoryboardName="Storyboard1"/>
                                    <StopStoryboard BeginStoryboardName="Storyboard2"/>
                                    <StopStoryboard BeginStoryboardName="Storyboard3"/>
                                    <StopStoryboard BeginStoryboardName="Storyboard4"/>
                                    <StopStoryboard BeginStoryboardName="Storyboard5"/>
                                    <StopStoryboard BeginStoryboardName="Storyboard6"/>
                                    <StopStoryboard BeginStoryboardName="Storyboard7"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid>
                                <Viewbox Width="40" Height="40" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Canvas Height="60" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Canvas.Resources>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Width" Value="15"/>
                                                <Setter Property="Height" Value="15" />
                                                <Setter Property="Fill" Value="#009B9B9B" />
                                            </Style>
                                        </Canvas.Resources>

                                        <Ellipse x:Name="ellipse0" Canvas.Left="1.75" Canvas.Top="21"/>
                                        <Ellipse x:Name="ellipse1" Canvas.Top="7" Canvas.Left="6.5"/>
                                        <Ellipse x:Name="ellipse2" Canvas.Left="20.5" Canvas.Top="0.75"/>
                                        <Ellipse x:Name="ellipse3" Canvas.Left="34.75" Canvas.Top="6.75"/>
                                        <Ellipse x:Name="ellipse4" Canvas.Left="40.5" Canvas.Top="20.75" />
                                        <Ellipse x:Name="ellipse5" Canvas.Left="34.75" Canvas.Top="34.5"/>
                                        <Ellipse x:Name="ellipse6" Canvas.Left="20.75" Canvas.Top="39.75"/>
                                        <Ellipse x:Name="ellipse7" Canvas.Top="34.25" Canvas.Left="7" />
                                        <Ellipse Width="39.5" Height="39.5" Canvas.Left="8.75" Canvas.Top="8" Visibility="Hidden"/>
                                    </Canvas>
                                </Viewbox>
                                <Label Content="{Binding Path=Text}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="CustomDarkGray">#FF333333</SolidColorBrush>
        <SolidColorBrush x:Key="ConfirmedBlue">#FF00ADE7</SolidColorBrush>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <SolidColorBrush Color="#FF00ADE7"/>
                                </Border.Background>
                                <ContentPresenter x:Name="theText" HorizontalAlignment="Center"
                                          VerticalAlignment="Center" TextElement.Foreground="White">
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#BB00ADE7"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="#BB00ADE7"/>-->
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="#FF97E1FF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="#FF333333"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF999999"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundCornerAnimated" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <SolidColorBrush Color="#FF00ADE7"/>
                                </Border.Background>
                                <ContentPresenter x:Name="theText" HorizontalAlignment="Center"
                                          VerticalAlignment="Center" TextElement.Foreground="White">
                                </ContentPresenter>
                            </Border>
                            <Control x:Name="busyAnim" Style="{StaticResource BusyAnimationStyle}" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#BB00ADE7"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="White"/>
                                <!--<Setter Property="CornerRadius" TargetName="border" Value="100" />-->
                                
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="#BB00ADE7"/>-->
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="#FF97E1FF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="Transparent"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF00ADE7"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Visibility" TargetName="busyAnim" Value="Visible"/>
                                <Trigger.EnterActions>

                                    <BeginStoryboard>
                                        <Storyboard>

                                            <DoubleAnimation Storyboard.TargetProperty="Width"
                              From="214" To="50" Duration="0:0:0.3" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="CornerRadius">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="7" BottomRight="7" TopLeft="7" TopRight="7" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="20" BottomRight="20" TopLeft="20" TopRight="20" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="100" BottomRight="100" TopLeft="100" TopRight="100" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Visibility" TargetName="busyAnim" Value="Hidden"/>
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="White"/>
                                <Trigger.EnterActions>

                                    <BeginStoryboard  x:Name="enableAnim">
                                        <Storyboard>

                                            <DoubleAnimation Storyboard.TargetProperty="Width"
                              From="50"  To="214" Duration="0:0:0.3" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="CornerRadius">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="20" BottomRight="20" TopLeft="20" TopRight="20" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="7" BottomRight="7" TopLeft="7" TopRight="7" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="5" BottomRight="5" TopLeft="5" TopRight="5" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="enableAnim"/>
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NoStyleButton" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="Transparent" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="JustText" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <SolidColorBrush Color="Transparent"/>
                                </Border.Background>
                                <ContentPresenter x:Name="theText" HorizontalAlignment="Center"
                                          VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}">
                                <!--<ContentPresenter x:Name="theText" HorizontalAlignment="Center"
                                          VerticalAlignment="Center" TextElement.Foreground="#FF00ADE7">-->
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="#BB00ADE7"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                                <Setter Property="TextElement.Foreground" TargetName="theText" Value="#BB00ADE7"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="FrameworkElement" x:Key="VisibleAnimation">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="Opacity" Value="0"/>
            <Style.Triggers>
                <Trigger Property="Visibility" Value="Collapsed">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="1.0" To="0.0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" VerticalAlignment="Center" VerticalContentAlignment="Center" Height="{TemplateBinding Height}" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1" VerticalAlignment="Center" VerticalContentAlignment="Center" Height="{TemplateBinding Height}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HoshiTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>

                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent"
                                 BorderThickness="0"
                                     VerticalContentAlignment="Bottom"
                                     Padding="0,0,0,5"
                                 Margin="0,0,0,0"
                                 Panel.ZIndex="1"/>

                            <!--<Viewbox x:Name="labelView" HorizontalAlignment="Left" VerticalAlignment="Bottom" Stretch="Uniform">-->
                                <Label x:Name="titleLabel" Content="{TemplateBinding Tag}" Background="Transparent" Foreground="LightGray"
                                       HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,0">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}">
                                        <Setter Property="FontSize" Value="12"/>
                                        <Setter Property="Padding" Value="1,0,0,30"/>
                                        <!--<Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <TranslateTransform Y="-25"/>
                                            </Setter.Value>
                                        </Setter>-->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="FontSize" Value="16"/>
                                                <Setter Property="Padding" Value="1,0,0,5"/>
                                                <!--<Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <TranslateTransform Y="0"/>
                                                    </Setter.Value>
                                                </Setter>-->
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                                <!--<Viewbox.Style>
                                    
                                    <Style TargetType="{x:Type Viewbox}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <TranslateTransform Y="-20"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <TranslateTransform Y="0"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Viewbox.Style>
                            </Viewbox>-->
                            
                            <Rectangle Fill="DarkGray" Height="1" VerticalAlignment="Bottom" Margin="1,0,0,0"/>
                            <Rectangle x:Name="blueSep" Fill="#FF00ADE7" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="1,0,0,0">
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Width" Value="225"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Width" Value="0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="titleLabel" Property="FontSize" Value="12"/>
                                <Trigger.EnterActions>
                                        
                                        <BeginStoryboard x:Name="shrinkAnim">
                                            <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="titleLabel"
                 Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                 To="-25" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetName="blueSep" Storyboard.TargetProperty="Width" To="225" Duration="0:0:0.3"/>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" BeginTime="00:00:00" Storyboard.TargetName="titleLabel">
                                                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="1,0,0,30" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="shrinkAnim"/>
                                </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
                <EventTrigger RoutedEvent="GotFocus">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>-->
        </Style>

        <Style x:Key="PasswordPlaceHolder" 
        TargetType="{x:Type PasswordBox}">
            <Setter Property="TrustWindowsWPF:PasswordBoxMonitor.IsMonitoring" 
              Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border Name="Bd" 
                    Background="{TemplateBinding Background}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    SnapsToDevicePixels="true">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <TextBlock Text="{TemplateBinding Tag}"  
                           Margin="4, 2, 0, 0" 
                           Foreground="LightGray"  
                           Visibility="Collapsed" 
                           Name="txtPrompt" Panel.ZIndex="1" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" 
                                                                         Value="false">
                                <Setter TargetName="Bd" 
                                                                                Property="Background" 
                                                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" 
                                                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="TrustWindowsWPF:PasswordBoxMonitor.PasswordLength" Value="0">
                                <Setter Property="Visibility" TargetName="txtPrompt" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HoshiPassword" 
        TargetType="{x:Type PasswordBox}">
            <Setter Property="TrustWindowsWPF:PasswordBoxMonitor.IsMonitoring" 
              Value="True"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom" />
            <Setter Property="Padding" Value="0,0,0,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border Name="Bd" 
                    Background="Transparent" 
                    BorderThickness="0" 
                    BorderBrush="Transparent" 
                    SnapsToDevicePixels="true">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                
                                <!--<TextBlock Text="{TemplateBinding Tag}"  
                           Margin="4, 2, 0, 0" 
                           Foreground="LightGray"  
                           Visibility="Collapsed" 
                           Name="txtPrompt" Panel.ZIndex="1" />-->
                                <Label x:Name="titleLabel" Content="{TemplateBinding Tag}" Background="Transparent" Foreground="LightGray"
                                       HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,0" Panel.ZIndex="-1">
                                    <Label.Style>
                                        <Style TargetType="{x:Type Label}">
                                            <Setter Property="FontSize" Value="12"/>
                                            <Setter Property="Padding" Value="1,0,0,30"/>
                                            <!--<Setter Property="RenderTransform">
                                                <Setter.Value>
                                                    <TranslateTransform Y="-25"/>
                                                </Setter.Value>
                                            </Setter>-->
                                        </Style>
                                    </Label.Style>
                                </Label>
 

                                <Rectangle Fill="DarkGray" Height="1" VerticalAlignment="Bottom" Margin="1,0,0,0"/>
                                <Rectangle x:Name="blueSep" Fill="#FF00ADE7" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="1,0,0,0">
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Width" Value="225"/>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsEnabled" 
                                                                         Value="false">
                                <Setter TargetName="Bd" 
                                                                                Property="Background" 
                                                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" 
                                                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>-->
                            <Trigger Property="TrustWindowsWPF:PasswordBoxMonitor.PasswordLength" Value="0">
                                <!--<Setter Property="RenderTransform" TargetName="titleLabel">
                                    <Setter.Value>
                                        <TranslateTransform Y="0"/>
                                    </Setter.Value>
                                </Setter>-->
                                <Setter TargetName="titleLabel" Property="Padding" Value="1,0,0,5"/>
                                <Setter TargetName="blueSep" Property="Width" Value="0"/>
                                <Setter TargetName="titleLabel" Property="FontSize" Value="16"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="titleLabel" Property="FontSize" Value="12"/>
                                <Trigger.EnterActions>

                                    <BeginStoryboard x:Name="shrinkAnim">
                                        <Storyboard>
                                            <!--<DoubleAnimation Storyboard.TargetName="titleLabel"
                 Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                 To="-25" Duration="0:0:0.3"/>-->
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" BeginTime="00:00:00" Storyboard.TargetName="titleLabel">
                                                <SplineThicknessKeyFrame KeyTime="00:00:00.3" Value="1,0,0,30" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="blueSep" Storyboard.TargetProperty="Width" To="225" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="shrinkAnim"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
